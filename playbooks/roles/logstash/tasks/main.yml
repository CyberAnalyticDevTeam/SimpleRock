######################################################
################# Setup Logstash #####################
######################################################
---

- name: "Create Logstash config directory"
  file:
    path: "{{ item }}"
    mode: u+rw,g+rw
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    state: directory
  with_items:
    - "{{ logstash_dir }}"
    - "{{ logstash_dir }}/config"
    - "{{ logstash_dir }}/pipeline"

- name: Install Logstash templates
  template:
    src: "templates/{{ item }}.yml.j2"
    dest: "{{ logstash_dir }}/{{ item }}.yml"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: 0644
  with_items:
    - logstash-deploy
    - pvc-data
    - pvc-logs

- name: Copy Pipeline Files
  template:
    src: "templates/{{ item }}.conf.j2"
    dest: "{{ logstash_dir }}/pipeline/{{ item }}.conf"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: 0644
  with_items:
    - kafka-bro
    - kafka-fsf
    - kafka-suricata

- name: Copy Config File
  template:
    src: "templates/logstash.yml.j2"
    dest: "{{ logstash_dir }}/logstash.yml"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: 0644

- name: Copy Config File
  template:
    src: "templates/logstash.yml.j2"
    dest: "{{ logstash_dir }}/config/logstash.yml"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: 0644

- name: Copy Config Files
  copy:
    src: "files/{{ item }}"
    dest: "{{ logstash_dir }}/config/{{ item }}"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: 0644
  with_items:
    - pipelines.yml
    - log4j2.properties

- name: Flush ConfigMaps
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" delete configmap {{ item }}'
  with_items:
    - logstash-main
    - logstash-config
    - logstash-pipeline
  ignore_errors: true

- name: Create Main ConfigMap
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" create configmap logstash-main --from-file {{ logstash_dir }}/logstash.yml'

- name: Create Config ConfigMap
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" create configmap logstash-config --from-file {{ logstash_dir }}/config'

- name: Create Pipeline ConfigMap
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" create configmap logstash-pipeline --from-file {{ logstash_dir }}/pipeline'

- name: Flush Deployment
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" delete -f {{ logstash_dir }}/{{ item }}.yml'
  with_items:
    - pvc-data
    - pvc-logs
    - logstash-deploy
  ignore_errors: yes

- name: Deploy PVCs
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" create -f {{ logstash_dir }}/{{ item }}.yml'
  with_items:
    - pvc-data
    - pvc-logs

#- name: Deploy PVCs
#  shell: "kubectl --kubeconfig {{ kubernetes_conf_file }} create -f {{ logstash_dir }}/{{ item.file }}.yml;while [ $(kubectl --kubeconfig {{ kubernetes_conf_file }} get pvc | grep {{ item.name }} | awk '{ print $2 }') != 'Bound' ]; do echo -n .; sleep 1; done; while [ $(kubectl --kubeconfig {{ kubernetes_conf_file }} get endpoints | grep {{ item.name }} | wc -l) != '0' ]; do echo -n .; sleep 1; done;"
#  with_items:
#    - { file: 'pvc-data', name: "{{ logstash_pv_data }}" }
#    - { file: 'pvc-logs', name: "{{ logstash_pv_logs }}" }

- name: Deploy Logstash
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" create -f {{ logstash_dir }}/logstash-deploy.yml'

- name: Wait for deployment to finish
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" rollout status -f {{ logstash_dir }}/logstash-deploy.yml'
