---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata: 
  name: {{ zk_app_name }}
spec: 
  replicas: {{ zk_replica_count }}
  serviceName: {{ zk_app_name }}
  template:
    metadata: 
      labels: 
        component: {{ zk_app_name }}
    spec:
      containers:
      - name: {{ zk_app_name }}
        image: {{ zookeeper_image }}:{{ zookeeper_ver }}
        imagePullPolicy: Always
        ports: 
        - containerPort: {{ zookeeper_port }}
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        volumeMounts: 
        - mountPath: {{ zookeeper_data_path }}
          name: zookeeper-data
        - mountPath: {{ zookeeper_datalog_path }}
          name: zookeeper-datalog        
        - name: configs
          mountPath: {{ zookeeper_home }}/conf/
      volumes:
      - name: configs
        configMap:
          name: {{ zk_app_name }}
          items:
          - key: zoo.cfg
            path: zoo.cfg
          - key: log4j.properties
            path: log4j.properties
          - key: configuration.xsl
            path: configuration.xsl
{% if remote %}
      - name: zookeeper-data
        hostPath:      
          path: /data/zookeeper/data      
          type: Directory
      - name: zookeeper-datalog
        hostPath:      
          path: /data/zookeeper/datalog      
          type: Directory
{% endif %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
{% if remote %}
                - {{ node_label }}
{% else %}
                - sensor
                - server
{% endif %}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - {{ zk_app_name }}
            topologyKey: "kubernetes.io/hostname"
{% if remote == false %}
  volumeClaimTemplates:
  - metadata:
      name: zookeeper-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: rbd
      resources:
        requests:
          storage: {{ zookeeper_pv_size }}Gi
  - metadata:
      name: zookeeper-datalog
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: rbd
      resources:
        requests:
          storage: {{ zookeeper_pv_size }}Gi
{% endif %}