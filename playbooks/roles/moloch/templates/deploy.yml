# TODO: Since Moloch is using rbd storage it cannot live on remote-sensors atm
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: moloch
  labels:
    component: moloch
spec:
  serviceName: moloch
  replicas: {{ groups['sensors'] | length }} #{{ groups['moloch'] | length }}
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      component: moloch
  template:
    metadata:
      labels:
        component: moloch
    spec:
      hostNetwork: true
      containers:
      - name: "moloch"
        image: "{{ moloch_image}}:{{ moloch_tag }}"
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
              - NET_RAW
              - SYS_NICE
        ports:
          - containerPort: {{ moloch_port }}
            name: webgui
        volumeMounts:
        - name: vars
          mountPath: /etc/icdm/
        - name: templates
          mountPath: /etc/icdm/templates/
        - name: configs
          mountPath: /etc/icdm/conf/
        - name: data
          mountPath: "{{ moloch_pcap_path }}"
      restartPolicy: Always
      volumes:
{% if pcap_cluster == 'false' %}
      - name: data
        hostPath:
          path: /pcap
          type: Directory
{% endif %}
      - name: vars
        configMap:
          name: vars
      - name: configs
        configMap:
          name: moloch
          items:
          - key: config.ini.conf
            path: config.ini.conf
      - name: templates
        configMap:
          name: moloch
          items:
          - key: config.ini.tmpl
            path: config.ini.tmpl
      nodeSelector:
        moloch: "true"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - moloch
              - key: node
                operator: In
                values:
                - sensor
            topologyKey: "kubernetes.io/hostname"
{% if pcap_cluster == 'true' %}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: rbd
      resources:
        requests:
          storage: {{ pcap_pv_size }}Gi
{% endif %}
